name: Sync Dev to Main

on:
  push:
    branches:
      - dev

permissions:
  contents: write

jobs:
  build-and-rebase:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up PHP 8.2
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.2
          tools: composer

      - name: Validate composer.json and composer.lock
        run: composer validate --strict

      - name: Cache Composer packages
        id: composer-cache
        uses: actions/cache@v3
        with:
          path: vendor
          key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-php-

      - name: Install dependencies
        run: composer install --prefer-dist --no-progress

      - name: Run PHP-CS-Fixer
        run: vendor/bin/php-cs-fixer fix --verbose

      - name: Run Tests
        run: composer run-script test  # Убедитесь, что есть test-скрипт в composer.json

      - name: Commit changes in dev
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git add -A
          git commit -m "CS-Fixer"
          git push origin dev --force-with-lease

      - name: Rebase main onto dev
        if: ${{ success() }}
        run: |
          if [ -n "$(git status --porcelain)" ]; then
            git stash push -m "Temporary save"
          fi

          if git show-ref --verify --quiet refs/heads/main; then
            git checkout main
          else
            echo "Main branch does not exist locally. Fetching from remote."
            git fetch origin main:main
            git checkout main
          fi

          git rebase dev --strategy-option theirs || {
            echo "Rebase failed. Aborting rebase.";
            git rebase --abort;
            exit 1;
          }

          if [ -n "$(git status --porcelain)" ]; then
              git add .
              git commit -m "Rebase main onto dev with resolved conflicts"
          fi

          git push origin main --force-with-lease

          git checkout dev

          if git stash list | grep -q "Temporary save"; then
            git stash pop
          fi
